root: card+
card: NAME " " cardcosts "\n" types "\n" abilities stats
types: maintype (" - " subtype)?
maintype: TYPE
subtype: /[ a-zA-Z]+/
stats: numberorx "/" numberorx

cardcosts: essencecost
abilitycosts: essencecost ", " activationcost ", " imperativescost | activationcost ", " imperativescost | essencecost ", " imperativescost | essencecost ", " activationcost | activationcost | essencecost | imperativescost
essencecost: ("{{" COLOR "}}")* ("{{" numberorx "}}") | ("{{" COLOR "}}")+ | "{{0}}"
activationcost: activatecost | deactivatecost
deactivatecost: "{{T}}"
activatecost: "{{Q}}"

abilities: (ability "\n")*
ability: keywords | activatedability | triggeredability | extracosts | effects
keywords: keyword (", " keyword)*
keyword: KEYWORD
activatedability: abilitycosts ":" " " effects
extracosts: "Extra cost:" " " imperativescost
acquiredability: "\"" ability "\"" (" and \"" ability "\"")* | "this ability"
imperativescost: imperativecost (", " imperativecost)*
imperativecost: return | discard | sacrifice | paylife

triggeredability: triggercondition ", " ("if " condition ", ")? effects
triggercondition: /[wW]/ ("hen " | "henever ") (whenyouplay | whengainlife | whenloselife | whendamaged) | endofturn | beginningofphase
whenyouplay: "you play " objects
whengainlife: players " gain" "s"? " life"
whenloselife: players " lose" "s"? " life"
whendamaged: objects " is dealt damage"

effects: composedeffect | may
may: ( /[yY]/ "ou ")? "may " imperatives (". " ("If" | "When") " you do, " composedeffect)?
composedeffect: effect (", " (("then" | "and")? " ")? effect)*
effect: imperatives | objecteffect | playereffect
objecteffect: objects " " objectphrases
playereffect: players " " playerphrases
imperatives: imperative (" for each " pureobject)? (", where X is " numberdefinition)? (" unless " condition)?
imperative: createtoken | destroy | copy | play | draw | search | shuffle | counter | activate | deactivate | extraturn | look | put | gaincontrol | switchdmghp | addessence | return | discard | sacrifice | payessence | paylife

createtoken: /[cC]/ "reate " number " " stats (" token" | " tokens") (" with " acquiredability)?
destroy: /[dD]/ "estroy " objects
copy: /[cC]/ "opy " objects
play: /[pP]/ "lay" "s"? " " objects (" " free)?
draw: ( /[yY]/ "ou ")? /[dD]/ ("raw" | "raws") " " ("a card" | number " cards")
discard: /[dD]/ "iscard " objects
search: /[sS]/ "earch " zones (" for " objects)?
shuffle: /[sS]/ "huffle" "s"? (" " (objects | zones) " into ")? zones
counter: /[cC]/ "ounter " objects
extraturn: /[tT]/ "ake an extra turn after this one"
look: /[lL]/ "ook at the top " number " cards of " zones
put: /[pP]/ "ut " objects " " into (" " deactivated)? (" and " objects " " into)?
gaincontrol: /[gG]/ "ain" "s"? " control of " objects (" " until)?
switchdmghp: /[sS]/ "witch the damage and health of " objects (" " until)?
addessence: /[aA]/ "dd " ("one essence of any color" | number " essence of any one color" | colort ((", " colort)* " or " colort)?)
activate: /[aA]/ "ctivate " objects
deactivate: /[dD]/ "eactivate " objects
return: /[rR]/ "eturn " objects (" from " zones)? " to " zones
sacrifice: /[sS]/ "acrifice " objects
payessence: /[pP]/ "ay " essencecost
paylife: /[pP]/ "ay " numberorxorthat " life"

playerphrases: playerphrase
| playerphrase " for each " object
| playerphrase " for the first time each turn"
| playerphrase ", then " playerphrase
| playerphrase " this way"

playerphrase: ("gain " | "gains ") numberorx " life"
| ("gain " | "gains ") "life equal to " itspossesion " " numberical
| ("controls " | "control ") objects
| ("owns " | "own ") objects
| "puts " objects " " into
| "discards " objects
| "sacrifices " objects
| "reveals " possesion " hand"
| imperative
| "can't " imperative
| "doesn't" | "don't" | "does" | "do"
| "lose" "s"? " the game"

objectphrases: objectphrase ","? " and " objectphrase
| objectphrase " or " objectphrase
| objectphrase "," (" then")? " " objectphrase
| objectphrase " " foreach
| objectphrase " " duration
| objectphrase " if " condition

objectphrase: ("has" | "have") " " acquiredability (" as long as " condition)?
| ("gets " | "get ") mod (" and gains " acquiredability)? (" " until)?
| ("gets " | "get ") mod (" and gains " acquiredability)? (" " until)?
| "gains " acquiredability (" and gets " mod)? (" " until)?
| ("gets " | "get ") mod (" " foreach)? (" " until)?
| ("enter" | "enters") " the field" " deactivated"? (" under " possesion " control")?
| ("leave" | "leaves") " the field"
| ("die" | "dies")
| "is put " into " from " zones
| "can't " cant (" " duration)?
| "deals " deals
| "is " what
| ("attacks" | "attack") (" " ("this" | "each") " fight if able")?
| ("gains " | "gain ") acquiredability (" " until)?
| "doesn't activate during " moment
| "blocks or becomes blocked by " objects
| "targets " objects
| ("cost" | "costs") " " essencecost " less to play"
| ("lose" | "loses") " all abilities" (" " until)?


# "do so"
# "does so"
# "becomes " becomes
# ("is" | "are") " created"
# "is countered this way"
# "causes " players " to discard " objects

into: "onto " field | "into " zones | (top | bottom) " " orderedzone (" " (ordered | random))?
top: "on top of"
bottom: "on the bottom of"
ordered: "in any order"
random: "in a random order"
place: "on " field | "in " zones
zones: (possesion | a) " " zone ((", " zone)* op zone)? | field | it
zone: orderedzone | hand
orderedzone: deck | discardzone
field: "the field"
hand: "hand"
deck: "deck"
discardzone: "discard"

referenceprefix: refsacrificed | anyof | the | reference | countable
reference: each | all | a | this | that | another | chosen | atleast | counted | target
counted: countable (" " reference)?
target: (another " ")? (countable " ")? "target"
countable: exactly | ormore | fewerthan | upto | anynumberof | oneof  | number
prefix: activated | deactivated | nontype | token | nontoken | attacking | blocking | attackingorblocking | stats
nontype: /[nN]/ "on-" type

suffix: player " " ("control" | "controls" | "don't control" | "doesn't control" | "own" | "owns" | "don't own" | "doesn't own")
| "in " zones (" and in " zones)?
| "from " zones
| "you play"
| "that targets only " objects
| "deactivated this way"
| "of the " type " type of " possesion " choice"
| object " could target"
| "from among them"
| "you've played before it this turn"

players: you | they | player (" " whocant)?
player: opponent | defending "player" | attacking "player" | refplayer | itspossesion " " ("controller" | "owner" | "owners" | "controllers")
refplayer: reference " " pureplayer
pureplayer: "opponent" | "player" | "players"
itspossesion: objects "'s" | its | their
possesion: your | their | players "'s"

objects: object ((", " object)* op object)? | each " of " object
object: selfref | it | they | one | other | refobject | specifiedobject | copyof | withoutkeyword | objectwith | pureobject
selfref: NAME
refobject: referenceprefix " " pureobject
specifiedobject: (prefix " ")+ pureobject  (" " suffix)?
copyof: /[cC]/ "opy" (" of " pureobject)?
withoutkeyword: pureobject " without " keyword
objectwith: pureobject " " with
pureobject: copies | typecard | tokencard | abilityref
typecard: (type " ")? "card" "s"?
copies: /[cC]/ "opies"
tokencard: /[tT]/ "oken" "s"?
abilityref: /[aA]/ "bilit" ("y" | "ies")

deals: "combat "? "damage to " damagerecipient
| numberorxorthat " damage to " damagerecipient
| "damage equal to " numberdefinition " to " damagerecipient
| "damage to " damagerecipient " equal to " numberdefinition
| numberorxorthat " damage spread between any target"
damagerecipient: objects | players | "any target" | "itself"
| "target " damagerecipient " or " damagerecipient

with: numberical " " numbericalcompare
| "the highest " numberical " among " objects
| "level " numberorxorthat
| acquiredability
what: color | objects | place | type (" in addition to its other types")?
becomes: "deactivated" | "activated" | "a copy of " objects (", except " copyexception (", " ("and ")? copyexception)*)?
copyexception: "its name is " NAME | "it is " what
cant: "attack"| "block" | "attack or block"
| "be blocked"
| "be countered"
| "be blocked by more than " number (" units" | " unit")
foreach: "for each " object
numberical: "damage" | "health" | "level"
numbericalcompare: numberorx " or greater"
| numberorx " or less"
| "less than or equal to " numberdefinition
| "greater than " numberdefinition
| numberorx
numberdefinition: itspossesion " " numberical | /[Tt]/ "he number of " objects

condition: playedwhen | yourturn | notyourturn | compare | playereffect | objecteffect
playedwhen: "you've played " objects " " duration
compare: numberdefinition " is " numbericalcompare
yourturn: "it's your turn"
notyourturn: "it's not your turn"

until: "until " (condition | "end of turn")
duration: thisturn | "for as long as " condition | until
thisturn: "this turn"
moment: turnqualifier " " phase | "fight on your turn"
turnqualifier: (possesion | the) (" " next)? | each | (this | that) " turn's"?
phase: turn | activationphase | drawphase | playphase | fightphase | cleanup
turn: "turn"
activationphase: "activation"
drawphase: "draw step"
playphase: "play phase"
fightphase: "fight phase"
cleanup: "cleanup"
beginningofphase: /[Aa]/ "t the beginning of " moment
next: "next"

activated: /[aA]/ "ctivated"
deactivated: /[dD]/ "eactivated"
token: /[tT]/ "oken"
nontoken: /[nN]/ "ontoken"
attacking: /[aA]/ "ttacking"
defending: /[dD]/ "efending"
blocking: /[bB]/ "locking"
attackingorblocking: /[aA]/ "ttacking or blocking"

refsacrificed: /[tT]/ "he sacrificed"
anyof: /[aA]/ "ny of"
the: /[tT]/ "he"
each: /[eE]/ "ach"
all: /[aA]/ "ll" (" the")?
this: /[tT]/ "his"
that: /[tT]/ ("hat" | "hese"| "hose")
a: /[aA]/ "n"?
another: /[aA]/ "nother"
chosen: /[tT]/ "he chosen"
atleast: /[aA]/ "t least " number
it: /[iI]/ "t"
other: /[tT]/ ("he rest" | "he other")
you: /[Yy]/ "ou"
they: /[Tt]/ "hey"
opponent: /[Yy]/ "our " ("opponent" | "opponents")
endofturn: /[Aa]/ "t end of the turn"
its: /[iI]/ "ts"
their: /[tT]/ "heir"
your: /[yY]/ "our"

free: "without paying essence"
whocant: "who can't"

mod: plusminus numberorx "/" plusminus numberorx
plusminus: "+" | "-"
numberorxorthat: numberorx | thatmany
numberorx: smallnumber | x
number:  a | one | two | three | four | five | six | seven | eight | nine | ten | x | thatmany | smallnumber

exactly: /[Ee]/ "xactly " number
ormore: number " or more"
fewerthan: /[Ff]/ "ewer than " number
upto: /[Uu]/ "p to " number
anynumberof: /[Aa]/ "ny number of"
oneof: /[Oo]/ "ne of"
thatmany: "that many" | "that much"
one: /[oO]/ "ne"
two: "two"
three: "three"
four: "four"
five: "five"
six: "six"
seven: "seven"
eight: "eight"
nine: "nine"
ten: "ten"
x: "X"

op: " " (and | or | andor) " "
and: "and"
or: "or"
andor: "and/or"

color: "red" | "green" | "blue" | "white" | "colorless"
type: TYPE
colort: COLOR
smallnumber: /[1]?[0-9]/

COLOR: "R" | "G" | "B" | "W"
TYPE: {types}
KEYWORD: {keywords}
NAME: {name}